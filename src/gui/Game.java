/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import client.GameClient;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 * GUI and game logic
 * @author Jircus
 */
public class Game extends javax.swing.JFrame {

    private String mySymbol;
    private String opponentsSymbol;
    private final GameClient client;
    private boolean won;
    
    /**
     * Creates new form Game
     * @param host
     * @param port
     * @param secondPort
     * @param name
     */
    public Game(String host, int port, int secondPort, String name) {
        initComponents();
        this.client = new GameClient(host, port, secondPort, name, this);
        jTable2.setEnabled(false);
        jLabel2.setText("Přihlášen jako: " + name);
        won = false;
    }
    
    /**
     * Sets symbol for player and his opponent
     * This method is used at the start of the game
     * @param symbol 
     */
    public void setSymbol(String symbol) {
        mySymbol = symbol;
        if("X".equals(symbol)) {
            opponentsSymbol = "O";
        }
        else {
            opponentsSymbol = "X";
        }
    }
    
    /**
     * Sets label when waiting for opponent's turn
     * @param name 
     */
    public void setWaitingLabel(String name) {
        jLabel1.setText("Nyní je na řadě hráč " + name);
    }
    
    /**
     * Sets label when it's player's turn
     */
    public void setReadyLabel() {
        jLabel1.setText("Jste na řadě, umístěte váš symbol");
    }
    
    /**
     * Enables or disables game field and sets text of label
     * This method is used at the start of the game
     * @param b
     * @param opponentsName 
     */
    public void setGameEnabled(Boolean b, String opponentsName) {
        jTable2.setEnabled(b);
        if(b == true) {
            jLabel1.setText("Jste na řadě, umístěte tvůj symbol");
        }
        else {
            jLabel1.setText("Nyní je na řadě protihráč " + opponentsName);
        }
    }
    
    /**
     * Shows dialog window and exits the application if opponent disconnects
     */
    public void opponentDisconnected() {
        if(won == false) {
            JOptionPane.showMessageDialog(this, "Soupeř opustil hru");
            System.exit(0);
        }
    }
    
    /**
     * Shows dialog window and exits the application if could not connect to server
     */
    public void notConnected() {
        JOptionPane.showMessageDialog(this, "K serveru se nepodařilo připojit");
        System.exit(0);
    }
    
    /**
     * Place opponents symbol in the field according to his move
     * Shows dialog window and exits the application if opponents wins
     * @param rowIndex
     * @param colIndex
     * @param isWon
     * @param name 
     */
    public void opponentsTurn(int rowIndex, int colIndex, boolean isWon, String name) {
        jTable2.getModel().setValueAt(opponentsSymbol, rowIndex, colIndex);
        jTable2.setEnabled(true);
        if(isWon == true){
            System.out.println("Opponent has won");
            JOptionPane.showMessageDialog(this, "Hráč " + name + " vyhrál :-(");
            System.exit(0);
        }
    }
    
    /**
     * Appends message in the text area
     * @param message 
     */
    public void receiveMessage(String message) {
        jTextArea2.append(message + "\n\n");
    }
    
    /**
     * Enables text field
     */
    public void enableTextField() {
        jTextField2.setEnabled(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setColumnSelectionAllowed(true);
        jTable2.setEnabled(false);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                makeMove(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
            jTable2.getColumnModel().getColumn(5).setResizable(false);
            jTable2.getColumnModel().getColumn(6).setResizable(false);
            jTable2.getColumnModel().getColumn(7).setResizable(false);
            jTable2.getColumnModel().getColumn(8).setResizable(false);
            jTable2.getColumnModel().getColumn(9).setResizable(false);
            jTable2.getColumnModel().getColumn(10).setResizable(false);
            jTable2.getColumnModel().getColumn(11).setResizable(false);
            jTable2.getColumnModel().getColumn(12).setResizable(false);
            jTable2.getColumnModel().getColumn(13).setResizable(false);
            jTable2.getColumnModel().getColumn(14).setResizable(false);
            jTable2.getColumnModel().getColumn(15).setResizable(false);
            jTable2.getColumnModel().getColumn(16).setResizable(false);
            jTable2.getColumnModel().getColumn(17).setResizable(false);
            jTable2.getColumnModel().getColumn(18).setResizable(false);
            jTable2.getColumnModel().getColumn(19).setResizable(false);
        }

        jLabel1.setText("Čekání na protihráče...");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        jTextField2.setEnabled(false);
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sendMessage(evt);
            }
        });

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jLabel3.setText("Chat");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Places symbol in the field where the user clicked and sends the message
     * Shows dialog window and exits the application if player wins
     * @param evt 
     */
    private void makeMove(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_makeMove
        if(jTable2.isEnabled() == true) {
            int rowIndex = jTable2.getSelectedRow();
            int colIndex = jTable2.getSelectedColumn();
            if(jTable2.getModel().getValueAt(rowIndex, colIndex) == null) {
                jTable2.getModel().setValueAt(mySymbol, rowIndex, colIndex);
                jTable2.setEnabled(false);
                for (int i=0; i<20; i++) {
                    for (int j=0; j<16; j++) {
                        if (jTable2.getModel().getValueAt(i,j) == mySymbol &&
                                jTable2.getModel().getValueAt(i,j+1) == mySymbol &&
                                jTable2.getModel().getValueAt(i,j+2) == mySymbol &&
                                jTable2.getModel().getValueAt(i,j+3) == mySymbol &&
                                jTable2.getModel().getValueAt(i,j+4) == mySymbol) {
                            client.sendMove(rowIndex, colIndex, true);
                            System.out.println("You have won");
                            won = true;
                            JOptionPane.showMessageDialog(this, "Vyhrál jsi!");
                            System.exit(0);
                        }
                    }
                }       
                for (int i=0; i<16; i++) {
                    for (int j=0; j<20; j++) {
                        if (jTable2.getModel().getValueAt(i,j) == mySymbol &&
                                jTable2.getModel().getValueAt(i+1,j) == mySymbol &&
                                jTable2.getModel().getValueAt(i+2,j) == mySymbol &&
                                jTable2.getModel().getValueAt(i+3,j) == mySymbol &&
                                jTable2.getModel().getValueAt(i+4,j) == mySymbol) {
                            client.sendMove(rowIndex, colIndex, true);
                            System.out.println("You have won");
                            won = true;
                            JOptionPane.showMessageDialog(this, "Vyhrál jsi!");
                            System.exit(0);
                        }
                    }
                }
                for (int i=0; i<16; i++) {
                    for (int j=0; j<16; j++) {
                        if (jTable2.getModel().getValueAt(i,j) == mySymbol &&
                                jTable2.getModel().getValueAt(i+1,j+1) == mySymbol &&
                                jTable2.getModel().getValueAt(i+2,j+2) == mySymbol &&
                                jTable2.getModel().getValueAt(i+3,j+3) == mySymbol &&
                                jTable2.getModel().getValueAt(i+4,j+4) == mySymbol) {
                            client.sendMove(rowIndex, colIndex, true);
                            System.out.println("You have won");
                            won = true;
                            JOptionPane.showMessageDialog(this, "Vyhrál jsi!");
                            System.exit(0);
                        }
                    }
                }
                for (int i=4; i<20; i++) {
                    for (int j=0; j<16; j++) {
                        if (jTable2.getModel().getValueAt(i,j) == mySymbol &&
                                jTable2.getModel().getValueAt(i-1,j+1) == mySymbol &&
                                jTable2.getModel().getValueAt(i-2,j+2) == mySymbol &&
                                jTable2.getModel().getValueAt(i-3,j+3) == mySymbol &&
                                jTable2.getModel().getValueAt(i-4,j+4) == mySymbol) {
                            client.sendMove(rowIndex, colIndex, true);
                            System.out.println("You have won");
                            won = true;
                            JOptionPane.showMessageDialog(this, "Vyhrál jsi!");
                            System.exit(0);
                        }
                    }
                }
                client.sendMove(rowIndex, colIndex, false);
            }
        }
    }//GEN-LAST:event_makeMove

    /**
     * Sends message
     * @param evt 
     */
    private void sendMessage(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sendMessage
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            client.sendMessage(jTextField2.getText());
            jTextField2.setText("");
        }
    }//GEN-LAST:event_sendMessage
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
